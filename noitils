#!/usr/bin/env sh

test -z "$STEAM_DIR" && STEAM_DIR="~/.local/share/steam"
NOITAPATH="$STEAM_DIR/steamapps/compatdata/881100/pfx/drive_c/users/steamuser/AppData/LocalLow/Nolla_Games_Noita"
test -d "$NOITAPATH" || {
	echo "could not find Noita directory at:
	$NOITAPATH" >&2
	exit 1
}

die(){
	echo $@ 1>&2
	exit 1
}

select_save() {
	ls $NOITAPATH | {
		test -n "$1" &&
		( grep $1 | umenu -s ) ||
		umenu -s
	}
}

is_noita_running() {
	pgrep noita.exe >/dev/null
}

wait_until_noita_closes() {
	is_noita_running && {
		echo -n "waiting for Noita to close"
		sleep 1
		while is_noita_running; do
			echo -n '.'
			sleep 1
		done
		echo
	}
}

load() {
	SAVE="$(select_save $1)"
	cd "$NOITAPATH"
	test -d "$SAVE" || die "$SAVE not a valid save"
	wait_until_noita_closes
	rm -rf save00.bak
	mv save00 save00.bak
	cp -rf "$SAVE" save00
	echo "loaded $SAVE"
}

save() {
	test -n "$1" &&
		SAVENAME="$1" || {
			echo -n "name of new save: ";
			read SAVENAME
		}
	cd "$NOITAPATH"
	wait_until_noita_closes
	cp -r save00 "$SAVENAME"
	echo "saved $SAVENAME"
}

get_recordings_chronological() {
	find "$NOITAPATH/save_rec/screenshots_animated" -name '*.gif' | sort
}

get_latest_recording() {
	 get_recordings_chronological | tail -n 1
}

gif_to_webm() {
	name="$(basename $1 | sed 's/.gif$//')"
	ffmpeg -i "$1" "$name.webm"
	rm "$1"
}

daily_death() {
	mkdir -p ~/daily-death
	cd ~/daily-death
	gif_to_webm "$(get_latest_recording)"
}

reset_daily_run() {
	rm "$NOITAPATH/save00/stats/_last_daily_run_played.xml"

}

play() {
	steam -nobrowser steam://rungameid/881100
}

if [ "$1" = browse ]; then
	lf $NOITAPATH
elif [ "$1" = save ]; then
	save $2
elif [ "$1" = load ]; then
	load $2
elif [ "$1" = restore ]; then
	load save00.bak
elif [ "$1" = 'convert' ]; then
	gif_to_webm $(get_recordings_chronological | umenu)
elif [ "$1" = 'daily-death' ]; then
	daily_death
elif [ "$1" = 'rerun' ]; then
	reset_daily_run
elif [ "$1" = 'play' ]; then
	play
fi

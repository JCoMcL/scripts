#!/bin/bash

# a script that uses ffmpeg to detect the 'black bars' that are sometimes encoded into the video and then
# reencodes the video stream (only) to remove them and restore the content's original aspect ratio.
# if the original video codec used was MPEG2 or h264, it also re-encodes it to libx264.

# stolen from paul-chambers/crop-black-bars.sh and modified to actually work

input="${1}"
output="${input%.*}.crop.${input##*.}"

# scan 5 seconds of video, starting one minute in, to autodetect the cropping dimensions to use
crop=$( ffmpeg -nostats -i "${input}" -vf "cropdetect=mode=black" -f null - 2>&1 \
	| tee /dev/stderr \
      | grep -oE 'crop=[0-9:]+' \
      | tail -1 )

die() { echo $@ >&2 && exit 1 ;}

test -n "${crop}" || die "cropdetect failed, get in here and fix it!"
echo "${crop}"

codec=$( ffprobe -v error -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "${input}" )

case ${codec} in
  mpeg2video)
    codec=libx264
    echo "converting mpeg2 to libx264"
    ;;
  h264)
    codec=libx264
    echo "converting h264 to libx264"
    ;;
  *)
    echo "original codec is ${codec}"
esac

ffmpeg -i "${input}" -map 0 -c copy -c:v ${codec} -crf 17 -filter:v "${crop}" "${output}"

